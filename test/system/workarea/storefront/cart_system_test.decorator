require 'test_helper'

module Workarea
  decorate Storefront::CartSystemTest, with: :afterpay do
    def test_afterpay_content
      visit storefront.product_path(@product)
      select @product.skus.first, from: 'sku'
      click_button t('workarea.storefront.products.add_to_cart')
      click_link t('workarea.storefront.carts.view_cart')

      assert(page.has_content?(t('workarea.storefront.carts.afterpay', installment_price: '$1.25', installment_count: Workarea.config.afterpay[:installment_count])))
    end

    def test_afterpay_price_ineligibility
      product = create_product(
          name: 'Integration Product 2',
          variants: [
            { name: 'SKU3', sku: 'SKU3', regular: 1.to_m },
            { name: 'SKU4', sku: 'SKU4', regular: 2.to_m }
          ]
        )

      visit storefront.product_path(product)
      select product.skus.first, from: 'sku'
      click_button t('workarea.storefront.products.add_to_cart')
      click_link t('workarea.storefront.carts.view_cart')

      assert(page.has_content?(t('workarea.storefront.afterpay.ineligible_order_total', min: '$5.00', max: '$500.00')))
    end

    def test_afterpay_country_ineligibility
      Workarea.with_config do |config|
        config.afterpay.api_timeout = 5
        config.afterpay.open_timeout = 2
        config.afterpay.currency_country_map = {
            "GBP": "GB"
        }

        config.afterpay.test = true
        config.afterpay.enabled = {
          au: true,
          us: true
        }

        product = create_product(
            name: 'Integration Product 2',
            variants: [
              { name: 'SKU3', sku: 'SKU3', regular: 1.to_m },
              { name: 'SKU4', sku: 'SKU4', regular: 2.to_m }
            ]
          )

        visit storefront.product_path(product)
        select product.skus.first, from: 'sku'
        click_button t('workarea.storefront.products.add_to_cart')
        click_link t('workarea.storefront.carts.view_cart')

        refute(page.has_content?(t('workarea.storefront.afterpay.ineligible_order_total', min: '$5.00', max: '$500.00')))
      end
    end

    def test_global_display_settings
      Workarea::Afterpay::Configuration.create(enabled: false)
      visit storefront.product_path(@product)
      select @product.skus.first, from: 'sku'
      click_button t('workarea.storefront.products.add_to_cart')
      click_link t('workarea.storefront.carts.view_cart')

      refute(page.has_content?(t('workarea.storefront.carts.afterpay', installment_price: '$1.25', installment_count: Workarea.config.afterpay[:installment_count])))
    end

    def test_cart_display_settings
      Workarea::Afterpay::Configuration.create(display_on_cart: false)
      visit storefront.product_path(@product)
      select @product.skus.first, from: 'sku'
      click_button t('workarea.storefront.products.add_to_cart')
      click_link t('workarea.storefront.carts.view_cart')

      refute(page.has_content?(t('workarea.storefront.carts.afterpay', installment_price: '$1.25', installment_count: Workarea.config.afterpay[:installment_count])))
    end
  end
end

